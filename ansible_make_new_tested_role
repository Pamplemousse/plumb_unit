#!/bin/bash

default_distrib=centos6

usage() {
  [ $# -gt 0 ] && echo $@ >&2
  echo "usage : $(basename $0) [-h] [-c] role_name
  creates an ansible role with tests
  -h = display this help
  -c = consider the role is exiting and is in the current directory" >&2
  exit 1
}

privileged=1
current=0
while getopts hc option
do
  case $option in
    h)
      usage
      ;;
    c)
      current=1
      ;;
  esac
done
shift $(($OPTIND-1))

[ $# -gt 0 ] && role=$1 || usage "le nom du rôle doit être passé en paramètre."

this_script=$(readlink -f $0)
tools=$(readlink -f $(dirname ${this_script}))
base_dir=$(readlink -f .)
role_dir=${base_dir}/roles/${role}
[ $current -eq 1 ] && role_dir=${base_dir}
mkdir -p ${role_dir}/{tasks,tests}

run_test="run_tests.sh"
bash_unit="bash_unit"
ansible_cfg="ansible.cfg"

cd ${role_dir}/tasks

[ -f main.yml ] || touch main.yml

cd ${role_dir}/tests

[ -f ${run_test} ] || cp ${tools}/${run_test} .
[ -x ${run_test} ] || chmod +x ${run_test}

[ -f ${bash_unit} ] || bash <(curl -Ss https://raw.githubusercontent.com/pgrange/bash_unit/master/install.sh) >/dev/null 2>&1
[ -x ${bash_unit} ] || chmod +x ${run_test}

[ -f ${ansible_cfg} ] || cp ${tools}/${ansible_cfg} .


if [ ! -f "test_${role}_${default_distrib}" ]
then
  cat << __EOF__ >test_${role}_${default_distrib}
#!/bin/bash

test_failed() {
  run_ansible 
  assert_equals "false" "true"
}

setup() {
  mkdir /tmp/ansible/group_vars -p

  cat << EOF > /tmp/ansible/playbook.yml
- hosts: all
  roles:
    - role: ${role}
EOF
}

run_ansible() {
  assert "sudo -u rpaulson ansible-playbook --verbose --diff -i 'localhost,' --connection=local /tmp/ansible/playbook.yml"
}

__EOF__
fi

echo "role [${role}] created" >&2
echo "to run tests :" >&2
echo "  cd ${role_dir}/tests" >&2
echo "  ./run_tests.sh" >&2

cd ${base_dir}
